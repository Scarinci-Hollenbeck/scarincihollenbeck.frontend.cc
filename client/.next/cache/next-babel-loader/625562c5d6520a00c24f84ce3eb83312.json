{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ptumulty\\\\sites\\\\scarincihollenbeck.frontend.cc\\\\client\\\\components\\\\search.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect } from 'react';\nimport Router from 'next/router';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { addRandomKey, headers } from 'utils/helpers';\nimport useInput from 'utils/input-hook';\nexport default function Search() {\n  const {\n    value: searchInput,\n    bind: bindSearchInput,\n    reset: resetSearchInput\n  } = useInput('');\n  const {\n    value: practiceInput,\n    bind: bindPracticeInput,\n    reset: resetPracticeInput\n  } = useInput('');\n  const {\n    value: attorneyInput,\n    bind: bindAttorneyInput,\n    reset: resetAttorneyInput\n  } = useInput('');\n  const {\n    value: categoryInput,\n    bind: bindCategoryInput,\n    reset: resetCategoryInput\n  } = useInput('');\n  const {\n    0: attorneys,\n    1: setAttorneys\n  } = useState([]);\n  const {\n    0: practices,\n    1: setPractices\n  } = useState([]);\n  const {\n    0: categories,\n    1: setCategories\n  } = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const [attorneys, practices, categories] = await Promise.all([fetch('https://wp.scarincihollenbeck.com/wp-json/attorney-search/attorneys', {\n        headers\n      }).then(data => data.json()), fetch('https://wp.scarincihollenbeck.com/wp-json/attorney-search/practices', {\n        headers\n      }).then(data => data.json()), fetch('https://wp.scarincihollenbeck.com/wp-json/wp/v2/categories?per_page=100', {\n        headers\n      }).then(data => data.json())]);\n      setAttorneys(attorneys);\n      setCategories(categories);\n      setPractices(practices);\n    };\n\n    fetchData();\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const query = `${searchInput !== '' ? searchInput : ''} ${practiceInput !== '' ? practiceInput : ''} ${attorneyInput !== '' ? attorneyInput : ''} ${categoryInput !== '' ? categoryInput : ''}`;\n\n    const formatUrl = str => str.toLowerCase().replace(',', ' ').replace('&', '').replace('â€™', \"'\").replace('.', '').replace(\"'\", '').replace(/\\s+/g, ' ').replace(/\\s/g, '+');\n\n    Router.push({\n      pathname: '/search',\n      query: {\n        q: formatUrl(query),\n        page: 1\n      }\n    });\n    resetSearchInput();\n    resetPracticeInput();\n    resetAttorneyInput();\n    resetCategoryInput();\n  };\n\n  function clearFields() {\n    resetSearchInput();\n    resetPracticeInput();\n    resetAttorneyInput();\n    resetCategoryInput();\n  }\n\n  return __jsx(\"div\", {\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, __jsx(Form, {\n    onSubmit: handleSubmit,\n    role: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, __jsx(Form.Group, {\n    controlId: \"textSearch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: \"sr-only\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \"Search Site\")), __jsx(Form.Control, _extends({\n    type: \"text\",\n    placeholder: \"Keyword..\"\n  }, bindSearchInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }))), __jsx(Form.Group, {\n    controlId: \"practices.ControlSelect1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Control, _extends({\n    as: \"select\"\n  }, bindPracticeInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }), __jsx(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Filter by practice\"), practices.length > 0 && practices.map(practice => __jsx(\"option\", {\n    key: addRandomKey(practice.title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 68\n    }\n  }, practice.title)))), __jsx(Form.Group, {\n    controlId: \"attorneys.ControlSelect1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Control, _extends({\n    as: \"select\"\n  }, bindAttorneyInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }), __jsx(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Filter by attorney\"), attorneys.length > 0 && attorneys.map(attorney => __jsx(\"option\", {\n    key: addRandomKey(attorney.title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 68\n    }\n  }, attorney.title)))), __jsx(Form.Group, {\n    controlId: \"category.SelectCategory\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Control, _extends({\n    as: \"select\"\n  }, bindCategoryInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }), __jsx(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Filter by category\"), categories.length > 0 && categories.map(category => category.name !== 'Uncategorized' && __jsx(\"option\", {\n    key: addRandomKey(category.name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 110\n    }\n  }, category.name)))), __jsx(Button, {\n    type: \"submit\",\n    variant: \"secondary\",\n    onClick: () => clearFields(),\n    className: \"px-5 my-2 mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"Clear\"), __jsx(Button, {\n    type: \"submit\",\n    variant: \"danger\",\n    className: \"my-2 px-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Search\")));\n}","map":{"version":3,"sources":["C:/Users/ptumulty/sites/scarincihollenbeck.frontend.cc/client/components/search.js"],"names":["React","useState","useEffect","Router","Form","Button","addRandomKey","headers","useInput","Search","value","searchInput","bind","bindSearchInput","reset","resetSearchInput","practiceInput","bindPracticeInput","resetPracticeInput","attorneyInput","bindAttorneyInput","resetAttorneyInput","categoryInput","bindCategoryInput","resetCategoryInput","attorneys","setAttorneys","practices","setPractices","categories","setCategories","fetchData","Promise","all","fetch","then","data","json","handleSubmit","e","preventDefault","query","formatUrl","str","toLowerCase","replace","push","pathname","q","page","clearFields","length","map","practice","title","attorney","category","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Router from 'next/router';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { addRandomKey, headers } from 'utils/helpers';\r\nimport useInput from 'utils/input-hook';\r\n\r\nexport default function Search() {\r\n  const { value: searchInput, bind: bindSearchInput, reset: resetSearchInput } = useInput('');\r\n  const { value: practiceInput, bind: bindPracticeInput, reset: resetPracticeInput } = useInput('');\r\n  const { value: attorneyInput, bind: bindAttorneyInput, reset: resetAttorneyInput } = useInput('');\r\n  const { value: categoryInput, bind: bindCategoryInput, reset: resetCategoryInput } = useInput('');\r\n  const [attorneys, setAttorneys] = useState([]);\r\n  const [practices, setPractices] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const [attorneys, practices, categories] = await Promise.all([\r\n        fetch('https://wp.scarincihollenbeck.com/wp-json/attorney-search/attorneys', { headers }).then((data) => data.json()),\r\n        fetch('https://wp.scarincihollenbeck.com/wp-json/attorney-search/practices', { headers }).then((data) => data.json()),\r\n        fetch('https://wp.scarincihollenbeck.com/wp-json/wp/v2/categories?per_page=100', { headers }).then((data) => data.json())\r\n      ]);\r\n\r\n      setAttorneys(attorneys);\r\n      setCategories(categories);\r\n      setPractices(practices);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const query = `${(searchInput !== '') ? searchInput : ''} ${(practiceInput !== '') ? practiceInput : ''} ${(attorneyInput !== '') ? attorneyInput : ''} ${(categoryInput !== '') ? categoryInput : ''}`;\r\n    const formatUrl = (str) => str.toLowerCase().replace(',',' ').replace('&', '').replace('â€™', \"'\").replace('.', '').replace(\"'\",'').replace(/\\s+/g,' ').replace(/\\s/g, '+');\r\n\r\n    Router.push({\r\n      pathname: '/search',\r\n      query: { q: formatUrl(query), page: 1 },\r\n    });\r\n\r\n    resetSearchInput();\r\n    resetPracticeInput();\r\n    resetAttorneyInput();\r\n    resetCategoryInput();\r\n  };\r\n\r\n  function clearFields() {\r\n    resetSearchInput();\r\n    resetPracticeInput();\r\n    resetAttorneyInput();\r\n    resetCategoryInput();\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-100\">\r\n      <Form onSubmit={handleSubmit} role=\"search\">\r\n        <Form.Group controlId=\"textSearch\">\r\n          <Form.Label>\r\n            <span className=\"sr-only\">\r\n              Search Site\r\n            </span>\r\n          </Form.Label>\r\n          <Form.Control type=\"text\" placeholder=\"Keyword..\" {...bindSearchInput} />\r\n        </Form.Group>\r\n        <Form.Group controlId=\"practices.ControlSelect1\">\r\n          <Form.Control as=\"select\" {...bindPracticeInput}>\r\n            <option>Filter by practice</option>\r\n            {(practices.length > 0) && practices.map((practice) => <option key={addRandomKey(practice.title)}>{practice.title}</option>) }\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"attorneys.ControlSelect1\">\r\n          <Form.Control as=\"select\" {...bindAttorneyInput}>\r\n            <option>Filter by attorney</option>\r\n            {(attorneys.length > 0) && attorneys.map((attorney) => <option key={addRandomKey(attorney.title)}>{attorney.title}</option>) }\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"category.SelectCategory\">\r\n          <Form.Control as=\"select\" {...bindCategoryInput}>\r\n            <option>Filter by category</option>\r\n            {(categories.length > 0) && categories.map((category) => ((category.name !== 'Uncategorized') && <option key={addRandomKey(category.name)}>{category.name}</option>)) }\r\n          </Form.Control>\r\n        </Form.Group>\r\n        <Button type=\"submit\" variant=\"secondary\" onClick={() => clearFields()} className=\"px-5 my-2 mr-2\">Clear</Button>\r\n        <Button type=\"submit\" variant=\"danger\" className=\"my-2 px-5\">Search</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}