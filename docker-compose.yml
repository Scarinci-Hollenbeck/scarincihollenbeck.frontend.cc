version: '3'
services:
  client:
    build: client/
    volumes:
      - ./client/app:/app
    environment:
      - VIRTUAL_HOST=legalmarketinghouse.com
      - ADMIN_SITE=${ADMIN_SITE}
      - CACHED_API=${CACHED_API}
      - FORMS_API=${FORMS_API}
      - FEED_API=${FEED_API}
    ports:
      - ${IP}:8500:81
    links:
      - wp
      - api
      - forms
      - feed

  forms:
    build: forms/
    volumes:
      - ./forms/app:/src
    ports:
      - ${IP}:8000:8000
  
  feed:
    build: feed/
    volumes:
      - "./feed/app:/src"
    ports:
      - ${IP}:8100:8100

  api:
    build: api/
    volumes:
      - ./api/app:/src
    env_file: .env
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - ADMIN_SITE=${ADMIN_SITE}
      - REDIS_URL=redis://cache
    ports:
      - ${IP}:8200:8200
    links:
      - redis
      - wp
    networks:
      - app-network
  

  redis:
    image: redis
    container_name: cache
    command: redis-server --requirepass ${REDIS_PASSWORD}
    expose:
      - 6379
    networks:
      - app-network
      
  db:
    image: mysql:latest
    container_name: db
    restart: unless-stopped
    env_file: .env
    ports:
      - ${IP}:3306:3306
    environment:
      - MYSQL_DATABASE=sh_db
    volumes: 
      - ./admin/db:/var/lib/mysql      
    command: '--default-authentication-plugin=mysql_native_password'
    networks:
      - app-network

  wp:
    depends_on: 
      - db
    image: wordpress:latest
    container_name: wp
    restart: unless-stopped
    env_file: .env
    ports:
      - ${IP}:8400:80
    environment:
      - VIRTUAL_HOST=admin.legalmarketinghouse.com
      - WORDPRESS_DB_HOST=db:3306
      - WORDPRESS_DB_USER=${MYSQL_USER}
      - WORDPRESS_DB_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - WORDPRESS_DB_NAME=sh_db
    volumes:
      - ./admin/app:/var/www/html
      - ./admin/config/php.conf.ini:/usr/local/etc/php/conf.d/php.ini
    networks:
      - app-network

  webserver:
    depends_on:
      - wp
    image: jwilder/nginx-proxy
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "81:81"
      - "443:443"
    volumes:
      - /etc/nginx/vhost.d
      - /usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - /etc/nginx/certs
    networks:
      - app-network

  certbot:
    depends_on:
      - webserver
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: certbot
    environment:
      - NGINX_PROXY_CONTAINER=webserver
    volumes:
      - certs:/etc/nginx/certs
      - vhostd:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: always
  
volumes:
  certbot-etc:
  webserver:
networks:
  app-network:
    driver: bridge  
